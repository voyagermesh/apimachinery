apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: voyager-operator
  namespace: ${VOYAGER_NAMESPACE}
  labels:
    app: voyager
rules:
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs: ["*"]
- apiGroups:
  - apiregistration.k8s.io
  resources:
  - apiservices
  verbs: ["list", "watch"]
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs: ["delete", "get", "list", "watch", "patch"]
- apiGroups:
  - voyager.appscode.com
  resources: ["*"]
  verbs: ["list"]
- apiGroups: [""]
  resources:
  - nodes
  verbs: ["list", "watch", "get"]
- apiGroups: [""]
  resources:
  - namespaces
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ${VOYAGER_ROLE_TYPE}
metadata:
  name: voyager-operator
  namespace: ${VOYAGER_NAMESPACE}
  labels:
    app: voyager
rules:
- apiGroups:
  - voyager.appscode.com
  resources: ["*"]
  verbs: ["*"]
- apiGroups:
  - monitoring.coreos.com
  resources:
  - servicemonitors
  verbs: ["*"]
- apiGroups:
  - apps
  resources:
  - daemonsets
  - deployments
  - replicasets
  verbs: ["*"]
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs: ["*"]
- apiGroups: [""]
  resources:
  - replicationcontrollers
  - services
  - endpoints
  - configmaps
  verbs: ["*"]
- apiGroups: [""]
  resources:
  - secrets
  verbs: ["get", "list", "watch", "create", "update", "patch"]
- apiGroups: [""]
  resources:
  - events
  verbs: ["create"]
- apiGroups: [""]
  resources:
  - pods
  verbs: ["get", "list", "watch", "delete", "deletecollection"]
- apiGroups: [""]
  resources:
  - serviceaccounts
  verbs: ["get", "create", "delete", "patch"]
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  - roles
  verbs: ["get", "create", "delete", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: voyager-operator
  labels:
    app: voyager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: voyager-operator
subjects:
- kind: ServiceAccount
  name: ${VOYAGER_SERVICE_ACCOUNT}
  namespace: ${VOYAGER_NAMESPACE}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ${VOYAGER_ROLE_TYPE}Binding
metadata:
  name: voyager-operator
  namespace: ${VOYAGER_NAMESPACE}
  labels:
    app: voyager
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ${VOYAGER_ROLE_TYPE}
  name: voyager-operator
subjects:
- kind: ServiceAccount
  name: ${VOYAGER_SERVICE_ACCOUNT}
  namespace: ${VOYAGER_NAMESPACE}
---
# to read the config for terminating authentication
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: voyager-apiserver-extension-server-authentication-reader
  namespace: kube-system
  labels:
    app: voyager
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: extension-apiserver-authentication-reader
subjects:
- kind: ServiceAccount
  name: ${VOYAGER_SERVICE_ACCOUNT}
  namespace: ${VOYAGER_NAMESPACE}
---
# to delegate authentication and authorization
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: voyager-apiserver-auth-delegator
  labels:
    app: voyager
roleRef:
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
  name: system:auth-delegator
subjects:
- kind: ServiceAccount
  name: ${VOYAGER_SERVICE_ACCOUNT}
  namespace: ${VOYAGER_NAMESPACE}
