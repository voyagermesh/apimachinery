apiVersion: apps/v1
kind: Deployment
metadata:
  name: voyager-operator
  namespace: ${VOYAGER_NAMESPACE}
  labels:
    app: voyager
spec:
  replicas: 1
  selector:
    matchLabels:
      app: voyager
  template:
    metadata:
      labels:
        app: voyager
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ''
    spec:
      serviceAccountName: ${VOYAGER_SERVICE_ACCOUNT}
      imagePullSecrets: [${VOYAGER_IMAGE_PULL_SECRET}]
      containers:
      - name: voyager
        image: ${VOYAGER_DOCKER_REGISTRY}/voyager:${VOYAGER_IMAGE_TAG}
        imagePullPolicy: ${VOYAGER_IMAGE_PULL_POLICY}
        args:
        - run
        - --v=3
        - --rbac=${VOYAGER_ENABLE_RBAC}
        - --cloud-provider=${VOYAGER_CLOUD_PROVIDER}
        - --cloud-config=${VOYAGER_CLOUD_CONFIG} # ie. /etc/kubernetes/azure.json for azure
        - --ingress-class=${VOYAGER_INGRESS_CLASS}
        - --restrict-to-operator-namespace=${VOYAGER_RESTRICT_TO_NAMESPACE}
        - --docker-registry=${VOYAGER_DOCKER_REGISTRY}
        - --haproxy-image-tag=${VOYAGER_HAPROXY_IMAGE_TAG}
        - --secure-port=8443
        - --audit-log-path=-
        - --tls-cert-file=/var/serving-cert/tls.crt
        - --tls-private-key-file=/var/serving-cert/tls.key
        - --enable-validating-webhook=${VOYAGER_ENABLE_VALIDATING_WEBHOOK}
        - --enable-status-subresource=${VOYAGER_ENABLE_STATUS_SUBRESOURCE}
        - --enable-analytics=${VOYAGER_ENABLE_ANALYTICS}
        ports:
        - containerPort: 8443
        - containerPort: 56791
        volumeMounts:
        - mountPath: /etc/kubernetes
          name: cloudconfig
          readOnly: true
        - mountPath: /var/serving-cert
          name: serving-cert
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
        resources:
          requests:
            cpu: "100m"
      nodeSelector:
        beta.kubernetes.io/os: linux
        beta.kubernetes.io/arch: amd64
      volumes:
      - hostPath:
          path: /etc/kubernetes
        name: cloudconfig
      - name: serving-cert
        secret:
          defaultMode: 420
          secretName: voyager-apiserver-cert
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      priorityClassName: system-cluster-critical
---
# kube lacks the service serving cert signer, so provide a manual secret for it
apiVersion: v1
kind: Secret
metadata:
  name: voyager-apiserver-cert
  namespace: ${VOYAGER_NAMESPACE}
  labels:
    app: voyager
type: kubernetes.io/tls
data:
  tls.crt: ${TLS_SERVING_CERT}
  tls.key: ${TLS_SERVING_KEY}
---
# to be able to expose TSB inside the cluster
apiVersion: v1
kind: Service
metadata:
  name: voyager-operator
  namespace: ${VOYAGER_NAMESPACE}
  labels:
    app: voyager
spec:
  ports:
  - name: admission
    port: 443
    targetPort: 8443
  - name: acme
    port: 56791
    targetPort: 56791
  selector:
    app: voyager
