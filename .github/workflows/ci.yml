name: CI

on:
  push:
    branches-ignore:
      - 'release-*'
    tags-ignore:
      - '*.*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        k8s: [v1.12.10, v1.14.6, v1.16.3]
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v1

    - name: Set up Docker Buildx
      id: buildx
      uses: crazy-max/ghaction-docker-buildx@v1
      with:
        version: latest

    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}

    - name: Run checks
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y bzr
        make ci

    - name: Build
      env:
        REGISTRY: appscodeci
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        USERNAME: 1gtm
      run: |
        docker login --username ${USERNAME} --password ${DOCKER_TOKEN}
        make push

    - name: Install link checker
      env:
        GO111MODULE: on
      run: |
        export GOPATH=$(go env GOPATH)
        export GOBIN=$GOPATH/bin
        mkdir -p $GOBIN
        mkdir -p $GOPATH/github.com/raviqqe
        pushd $GOPATH/github.com/raviqqe
        git clone https://github.com/appscodelabs/liche
        cd liche
        git checkout master
        go install -v ./...
        sudo mv $GOBIN/* /usr/local/bin
        popd

    - name: Check links
      run: |
        liche -r docs -d $(pwd) -c 10 -p -h -l -x '^*(voyager.appscode.ninja|www.kiteci.pro)*$'

    - name: Create Kubernetes ${{ matrix.k8s }} cluster
      id: kind
      uses: engineerd/setup-kind@v0.1.0
      with:
        config: hack/kubernetes/kind.yaml
        image: kindest/node:${{ matrix.k8s }}

    - name: Prepare cluster for testing
      id: local-path
      env:
        DOCKER_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
        USERNAME: 1gtm
        REGISTRY_SECRET: regcred
      run: |
        export KUBECONFIG="$(kind get kubeconfig-path)"
        echo
        echo "waiting for nodes to be ready ..."
        kubectl wait --for=condition=Ready nodes --all --timeout=5m
        kubectl get nodes
        echo
        echo "installing local-path provisioner ..."
        kubectl delete storageclass --all
        kubectl apply -f https://github.com/rancher/local-path-provisioner/raw/v0.0.11/deploy/local-path-storage.yaml
        kubectl wait --for=condition=Ready pods -n local-path-storage --all --timeout=5m
        kubectl apply -f hack/kubernetes/storageclass/standard.yaml
        echo
        echo "create docker-registry secret"
        kubectl create secret docker-registry ${REGISTRY_SECRET} --namespace=kube-system --docker-server=https://index.docker.io/v1/ --docker-username=${USERNAME} --docker-password=${DOCKER_TOKEN}

    - name: Test charts
      run: |
        export KUBECONFIG="$(kind get kubeconfig-path)"
        make ct

    - name: Test script installer
      run: |
        export KUBECONFIG="$(kind get kubeconfig-path)"
        echo "installing operator"
        ./hack/deploy/voyager.sh --provider=minikube
        echo
        echo "uninstalling operator"
        ./hack/deploy/voyager.sh --uninstall
        echo
        echo "purging operator"
        ./hack/deploy/voyager.sh --uninstall --purge

    - name: Run e2e tests
      env:
        REGISTRY: appscodeci
        REGISTRY_SECRET: regcred
        TEST_CREDENTIALS: ${{ secrets.TEST_CREDENTIALS }}
        GOOGLE_SERVICE_ACCOUNT_JSON_KEY: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON_KEY }}
      run: |
        export KUBECONFIG="$(kind get kubeconfig-path)"
        echo "preparing test credentials"
        mkdir -p hack/config
        echo -n "$TEST_CREDENTIALS" > hack/config/.env
        echo >> hack/config/.env
        echo "GOOGLE_SERVICE_ACCOUNT_JSON_KEY=$(echo $GOOGLE_SERVICE_ACCOUNT_JSON_KEY)" >> hack/config/.env
        make install
        echo
        make e2e-tests
