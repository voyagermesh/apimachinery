//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright AppsCode Inc. and Contributors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	unsafe "unsafe"

	v1 "voyagermesh.dev/apimachinery/apis/voyager/v1"

	corev1 "k8s.io/api/core/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	intstr "k8s.io/apimachinery/pkg/util/intstr"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*AuthOption)(nil), (*v1.AuthOption)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_AuthOption_To_v1_AuthOption(a.(*AuthOption), b.(*v1.AuthOption), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.AuthOption)(nil), (*AuthOption)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_AuthOption_To_v1beta1_AuthOption(a.(*v1.AuthOption), b.(*AuthOption), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*BasicAuth)(nil), (*v1.BasicAuth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_BasicAuth_To_v1_BasicAuth(a.(*BasicAuth), b.(*v1.BasicAuth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.BasicAuth)(nil), (*BasicAuth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_BasicAuth_To_v1beta1_BasicAuth(a.(*v1.BasicAuth), b.(*BasicAuth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*CoordinatorSpec)(nil), (*v1.CoordinatorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_CoordinatorSpec_To_v1_CoordinatorSpec(a.(*CoordinatorSpec), b.(*v1.CoordinatorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.CoordinatorSpec)(nil), (*CoordinatorSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_CoordinatorSpec_To_v1beta1_CoordinatorSpec(a.(*v1.CoordinatorSpec), b.(*CoordinatorSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FrontendRule)(nil), (*v1.FrontendRule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_FrontendRule_To_v1_FrontendRule(a.(*FrontendRule), b.(*v1.FrontendRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.FrontendRule)(nil), (*FrontendRule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_FrontendRule_To_v1beta1_FrontendRule(a.(*v1.FrontendRule), b.(*FrontendRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HTTPIngressPath)(nil), (*v1.HTTPIngressPath)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_HTTPIngressPath_To_v1_HTTPIngressPath(a.(*HTTPIngressPath), b.(*v1.HTTPIngressPath), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.HTTPIngressPath)(nil), (*HTTPIngressPath)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_HTTPIngressPath_To_v1beta1_HTTPIngressPath(a.(*v1.HTTPIngressPath), b.(*HTTPIngressPath), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HTTPIngressRuleValue)(nil), (*v1.HTTPIngressRuleValue)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_HTTPIngressRuleValue_To_v1_HTTPIngressRuleValue(a.(*HTTPIngressRuleValue), b.(*v1.HTTPIngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.HTTPIngressRuleValue)(nil), (*HTTPIngressRuleValue)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(a.(*v1.HTTPIngressRuleValue), b.(*HTTPIngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Ingress)(nil), (*v1.Ingress)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Ingress_To_v1_Ingress(a.(*Ingress), b.(*v1.Ingress), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.Ingress)(nil), (*Ingress)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Ingress_To_v1beta1_Ingress(a.(*v1.Ingress), b.(*Ingress), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IngressList)(nil), (*v1.IngressList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_IngressList_To_v1_IngressList(a.(*IngressList), b.(*v1.IngressList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.IngressList)(nil), (*IngressList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressList_To_v1beta1_IngressList(a.(*v1.IngressList), b.(*IngressList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IngressRef)(nil), (*v1.IngressRef)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_IngressRef_To_v1_IngressRef(a.(*IngressRef), b.(*v1.IngressRef), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.IngressRef)(nil), (*IngressRef)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressRef_To_v1beta1_IngressRef(a.(*v1.IngressRef), b.(*IngressRef), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IngressRule)(nil), (*v1.IngressRule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_IngressRule_To_v1_IngressRule(a.(*IngressRule), b.(*v1.IngressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.IngressRule)(nil), (*IngressRule)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressRule_To_v1beta1_IngressRule(a.(*v1.IngressRule), b.(*IngressRule), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IngressRuleValue)(nil), (*v1.IngressRuleValue)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_IngressRuleValue_To_v1_IngressRuleValue(a.(*IngressRuleValue), b.(*v1.IngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.IngressRuleValue)(nil), (*IngressRuleValue)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressRuleValue_To_v1beta1_IngressRuleValue(a.(*v1.IngressRuleValue), b.(*IngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*IngressStatus)(nil), (*v1.IngressStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_IngressStatus_To_v1_IngressStatus(a.(*IngressStatus), b.(*v1.IngressStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.IngressStatus)(nil), (*IngressStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressStatus_To_v1beta1_IngressStatus(a.(*v1.IngressStatus), b.(*IngressStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.IngressTLS)(nil), (*IngressTLS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressTLS_To_v1beta1_IngressTLS(a.(*v1.IngressTLS), b.(*IngressTLS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*OAuth)(nil), (*v1.OAuth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_OAuth_To_v1_OAuth(a.(*OAuth), b.(*v1.OAuth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.OAuth)(nil), (*OAuth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_OAuth_To_v1beta1_OAuth(a.(*v1.OAuth), b.(*OAuth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TCPIngressRuleValue)(nil), (*v1.TCPIngressRuleValue)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_TCPIngressRuleValue_To_v1_TCPIngressRuleValue(a.(*TCPIngressRuleValue), b.(*v1.TCPIngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.TCPIngressRuleValue)(nil), (*TCPIngressRuleValue)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_TCPIngressRuleValue_To_v1beta1_TCPIngressRuleValue(a.(*v1.TCPIngressRuleValue), b.(*TCPIngressRuleValue), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TLSAuth)(nil), (*v1.TLSAuth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_TLSAuth_To_v1_TLSAuth(a.(*TLSAuth), b.(*v1.TLSAuth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.TLSAuth)(nil), (*TLSAuth)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_TLSAuth_To_v1beta1_TLSAuth(a.(*v1.TLSAuth), b.(*TLSAuth), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*VolumeSource)(nil), (*v1.VolumeSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_VolumeSource_To_v1_VolumeSource(a.(*VolumeSource), b.(*v1.VolumeSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1.VolumeSource)(nil), (*VolumeSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_VolumeSource_To_v1beta1_VolumeSource(a.(*v1.VolumeSource), b.(*VolumeSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*int32)(nil), (*intstr.IntOrString)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_int32_To_intstr_IntOrString(a.(*int32), b.(*intstr.IntOrString), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*intstr.IntOrString)(nil), (*int32)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_intstr_IntOrString_To_int32(a.(*intstr.IntOrString), b.(*int32), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.IngressBackend)(nil), (*HTTPIngressBackend)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressBackend_To_v1beta1_HTTPIngressBackend(a.(*v1.IngressBackend), b.(*HTTPIngressBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.IngressBackend)(nil), (*IngressBackend)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressBackend_To_v1beta1_IngressBackend(a.(*v1.IngressBackend), b.(*IngressBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.IngressSpec)(nil), (*IngressSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_IngressSpec_To_v1beta1_IngressSpec(a.(*v1.IngressSpec), b.(*IngressSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*HTTPIngressBackend)(nil), (*v1.IngressBackend)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_HTTPIngressBackend_To_v1_IngressBackend(a.(*HTTPIngressBackend), b.(*v1.IngressBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*IngressBackend)(nil), (*v1.IngressBackend)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_IngressBackend_To_v1_IngressBackend(a.(*IngressBackend), b.(*v1.IngressBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*IngressSpec)(nil), (*v1.IngressSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_IngressSpec_To_v1_IngressSpec(a.(*IngressSpec), b.(*v1.IngressSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*IngressTLS)(nil), (*v1.IngressTLS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_IngressTLS_To_v1_IngressTLS(a.(*IngressTLS), b.(*v1.IngressTLS), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_AuthOption_To_v1_AuthOption(in *AuthOption, out *v1.AuthOption, s conversion.Scope) error {
	out.Basic = (*v1.BasicAuth)(unsafe.Pointer(in.Basic))
	out.TLS = (*v1.TLSAuth)(unsafe.Pointer(in.TLS))
	out.OAuth = *(*[]v1.OAuth)(unsafe.Pointer(&in.OAuth))
	return nil
}

// Convert_v1beta1_AuthOption_To_v1_AuthOption is an autogenerated conversion function.
func Convert_v1beta1_AuthOption_To_v1_AuthOption(in *AuthOption, out *v1.AuthOption, s conversion.Scope) error {
	return autoConvert_v1beta1_AuthOption_To_v1_AuthOption(in, out, s)
}

func autoConvert_v1_AuthOption_To_v1beta1_AuthOption(in *v1.AuthOption, out *AuthOption, s conversion.Scope) error {
	out.Basic = (*BasicAuth)(unsafe.Pointer(in.Basic))
	out.TLS = (*TLSAuth)(unsafe.Pointer(in.TLS))
	out.OAuth = *(*[]OAuth)(unsafe.Pointer(&in.OAuth))
	return nil
}

// Convert_v1_AuthOption_To_v1beta1_AuthOption is an autogenerated conversion function.
func Convert_v1_AuthOption_To_v1beta1_AuthOption(in *v1.AuthOption, out *AuthOption, s conversion.Scope) error {
	return autoConvert_v1_AuthOption_To_v1beta1_AuthOption(in, out, s)
}

func autoConvert_v1beta1_BasicAuth_To_v1_BasicAuth(in *BasicAuth, out *v1.BasicAuth, s conversion.Scope) error {
	out.SecretName = in.SecretName
	out.Realm = in.Realm
	return nil
}

// Convert_v1beta1_BasicAuth_To_v1_BasicAuth is an autogenerated conversion function.
func Convert_v1beta1_BasicAuth_To_v1_BasicAuth(in *BasicAuth, out *v1.BasicAuth, s conversion.Scope) error {
	return autoConvert_v1beta1_BasicAuth_To_v1_BasicAuth(in, out, s)
}

func autoConvert_v1_BasicAuth_To_v1beta1_BasicAuth(in *v1.BasicAuth, out *BasicAuth, s conversion.Scope) error {
	out.SecretName = in.SecretName
	out.Realm = in.Realm
	return nil
}

// Convert_v1_BasicAuth_To_v1beta1_BasicAuth is an autogenerated conversion function.
func Convert_v1_BasicAuth_To_v1beta1_BasicAuth(in *v1.BasicAuth, out *BasicAuth, s conversion.Scope) error {
	return autoConvert_v1_BasicAuth_To_v1beta1_BasicAuth(in, out, s)
}

func autoConvert_v1beta1_CoordinatorSpec_To_v1_CoordinatorSpec(in *CoordinatorSpec, out *v1.CoordinatorSpec, s conversion.Scope) error {
	out.Resources = in.Resources
	out.SecurityContext = (*corev1.SecurityContext)(unsafe.Pointer(in.SecurityContext))
	return nil
}

// Convert_v1beta1_CoordinatorSpec_To_v1_CoordinatorSpec is an autogenerated conversion function.
func Convert_v1beta1_CoordinatorSpec_To_v1_CoordinatorSpec(in *CoordinatorSpec, out *v1.CoordinatorSpec, s conversion.Scope) error {
	return autoConvert_v1beta1_CoordinatorSpec_To_v1_CoordinatorSpec(in, out, s)
}

func autoConvert_v1_CoordinatorSpec_To_v1beta1_CoordinatorSpec(in *v1.CoordinatorSpec, out *CoordinatorSpec, s conversion.Scope) error {
	out.Resources = in.Resources
	out.SecurityContext = (*corev1.SecurityContext)(unsafe.Pointer(in.SecurityContext))
	return nil
}

// Convert_v1_CoordinatorSpec_To_v1beta1_CoordinatorSpec is an autogenerated conversion function.
func Convert_v1_CoordinatorSpec_To_v1beta1_CoordinatorSpec(in *v1.CoordinatorSpec, out *CoordinatorSpec, s conversion.Scope) error {
	return autoConvert_v1_CoordinatorSpec_To_v1beta1_CoordinatorSpec(in, out, s)
}

func autoConvert_v1beta1_FrontendRule_To_v1_FrontendRule(in *FrontendRule, out *v1.FrontendRule, s conversion.Scope) error {
	if err := Convert_intstr_IntOrString_To_int32(&in.Port, &out.Port, s); err != nil {
		return err
	}
	out.Rules = *(*[]string)(unsafe.Pointer(&in.Rules))
	out.Auth = (*v1.AuthOption)(unsafe.Pointer(in.Auth))
	return nil
}

// Convert_v1beta1_FrontendRule_To_v1_FrontendRule is an autogenerated conversion function.
func Convert_v1beta1_FrontendRule_To_v1_FrontendRule(in *FrontendRule, out *v1.FrontendRule, s conversion.Scope) error {
	return autoConvert_v1beta1_FrontendRule_To_v1_FrontendRule(in, out, s)
}

func autoConvert_v1_FrontendRule_To_v1beta1_FrontendRule(in *v1.FrontendRule, out *FrontendRule, s conversion.Scope) error {
	if err := Convert_int32_To_intstr_IntOrString(&in.Port, &out.Port, s); err != nil {
		return err
	}
	out.Rules = *(*[]string)(unsafe.Pointer(&in.Rules))
	out.Auth = (*AuthOption)(unsafe.Pointer(in.Auth))
	return nil
}

// Convert_v1_FrontendRule_To_v1beta1_FrontendRule is an autogenerated conversion function.
func Convert_v1_FrontendRule_To_v1beta1_FrontendRule(in *v1.FrontendRule, out *FrontendRule, s conversion.Scope) error {
	return autoConvert_v1_FrontendRule_To_v1beta1_FrontendRule(in, out, s)
}

func autoConvert_v1beta1_HTTPIngressPath_To_v1_HTTPIngressPath(in *HTTPIngressPath, out *v1.HTTPIngressPath, s conversion.Scope) error {
	out.Path = in.Path
	if err := Convert_v1beta1_HTTPIngressBackend_To_v1_IngressBackend(&in.Backend, &out.Backend, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_HTTPIngressPath_To_v1_HTTPIngressPath is an autogenerated conversion function.
func Convert_v1beta1_HTTPIngressPath_To_v1_HTTPIngressPath(in *HTTPIngressPath, out *v1.HTTPIngressPath, s conversion.Scope) error {
	return autoConvert_v1beta1_HTTPIngressPath_To_v1_HTTPIngressPath(in, out, s)
}

func autoConvert_v1_HTTPIngressPath_To_v1beta1_HTTPIngressPath(in *v1.HTTPIngressPath, out *HTTPIngressPath, s conversion.Scope) error {
	out.Path = in.Path
	if err := Convert_v1_IngressBackend_To_v1beta1_HTTPIngressBackend(&in.Backend, &out.Backend, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_HTTPIngressPath_To_v1beta1_HTTPIngressPath is an autogenerated conversion function.
func Convert_v1_HTTPIngressPath_To_v1beta1_HTTPIngressPath(in *v1.HTTPIngressPath, out *HTTPIngressPath, s conversion.Scope) error {
	return autoConvert_v1_HTTPIngressPath_To_v1beta1_HTTPIngressPath(in, out, s)
}

func autoConvert_v1beta1_HTTPIngressRuleValue_To_v1_HTTPIngressRuleValue(in *HTTPIngressRuleValue, out *v1.HTTPIngressRuleValue, s conversion.Scope) error {
	out.Address = in.Address
	if err := Convert_intstr_IntOrString_To_int32(&in.Port, &out.Port, s); err != nil {
		return err
	}
	out.NoTLS = in.NoTLS
	if err := Convert_intstr_IntOrString_To_int32(&in.NodePort, &out.NodePort, s); err != nil {
		return err
	}
	out.ALPN = *(*[]string)(unsafe.Pointer(&in.ALPN))
	out.Proto = in.Proto
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]v1.HTTPIngressPath, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_HTTPIngressPath_To_v1_HTTPIngressPath(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Paths = nil
	}
	return nil
}

// Convert_v1beta1_HTTPIngressRuleValue_To_v1_HTTPIngressRuleValue is an autogenerated conversion function.
func Convert_v1beta1_HTTPIngressRuleValue_To_v1_HTTPIngressRuleValue(in *HTTPIngressRuleValue, out *v1.HTTPIngressRuleValue, s conversion.Scope) error {
	return autoConvert_v1beta1_HTTPIngressRuleValue_To_v1_HTTPIngressRuleValue(in, out, s)
}

func autoConvert_v1_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(in *v1.HTTPIngressRuleValue, out *HTTPIngressRuleValue, s conversion.Scope) error {
	out.Address = in.Address
	if err := Convert_int32_To_intstr_IntOrString(&in.Port, &out.Port, s); err != nil {
		return err
	}
	out.NoTLS = in.NoTLS
	if err := Convert_int32_To_intstr_IntOrString(&in.NodePort, &out.NodePort, s); err != nil {
		return err
	}
	out.ALPN = *(*[]string)(unsafe.Pointer(&in.ALPN))
	out.Proto = in.Proto
	if in.Paths != nil {
		in, out := &in.Paths, &out.Paths
		*out = make([]HTTPIngressPath, len(*in))
		for i := range *in {
			if err := Convert_v1_HTTPIngressPath_To_v1beta1_HTTPIngressPath(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Paths = nil
	}
	return nil
}

// Convert_v1_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue is an autogenerated conversion function.
func Convert_v1_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(in *v1.HTTPIngressRuleValue, out *HTTPIngressRuleValue, s conversion.Scope) error {
	return autoConvert_v1_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(in, out, s)
}

func autoConvert_v1beta1_Ingress_To_v1_Ingress(in *Ingress, out *v1.Ingress, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_IngressSpec_To_v1_IngressSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_IngressStatus_To_v1_IngressStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Ingress_To_v1_Ingress is an autogenerated conversion function.
func Convert_v1beta1_Ingress_To_v1_Ingress(in *Ingress, out *v1.Ingress, s conversion.Scope) error {
	return autoConvert_v1beta1_Ingress_To_v1_Ingress(in, out, s)
}

func autoConvert_v1_Ingress_To_v1beta1_Ingress(in *v1.Ingress, out *Ingress, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_IngressSpec_To_v1beta1_IngressSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_IngressStatus_To_v1beta1_IngressStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_Ingress_To_v1beta1_Ingress is an autogenerated conversion function.
func Convert_v1_Ingress_To_v1beta1_Ingress(in *v1.Ingress, out *Ingress, s conversion.Scope) error {
	return autoConvert_v1_Ingress_To_v1beta1_Ingress(in, out, s)
}

func autoConvert_v1beta1_IngressBackend_To_v1_IngressBackend(in *IngressBackend, out *v1.IngressBackend, s conversion.Scope) error {
	out.Name = in.Name
	out.HostNames = *(*[]string)(unsafe.Pointer(&in.HostNames))
	// WARNING: in.ServiceName requires manual conversion: does not exist in peer-type
	// WARNING: in.ServicePort requires manual conversion: does not exist in peer-type
	out.BackendRules = *(*[]string)(unsafe.Pointer(&in.BackendRules))
	out.ALPN = *(*[]string)(unsafe.Pointer(&in.ALPN))
	out.Proto = in.Proto
	out.LoadBalanceOn = in.LoadBalanceOn
	return nil
}

func autoConvert_v1_IngressBackend_To_v1beta1_IngressBackend(in *v1.IngressBackend, out *IngressBackend, s conversion.Scope) error {
	out.Name = in.Name
	out.HostNames = *(*[]string)(unsafe.Pointer(&in.HostNames))
	// WARNING: in.Service requires manual conversion: does not exist in peer-type
	out.BackendRules = *(*[]string)(unsafe.Pointer(&in.BackendRules))
	out.ALPN = *(*[]string)(unsafe.Pointer(&in.ALPN))
	out.Proto = in.Proto
	out.LoadBalanceOn = in.LoadBalanceOn
	return nil
}

func autoConvert_v1beta1_IngressList_To_v1_IngressList(in *IngressList, out *v1.IngressList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1.Ingress, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Ingress_To_v1_Ingress(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_IngressList_To_v1_IngressList is an autogenerated conversion function.
func Convert_v1beta1_IngressList_To_v1_IngressList(in *IngressList, out *v1.IngressList, s conversion.Scope) error {
	return autoConvert_v1beta1_IngressList_To_v1_IngressList(in, out, s)
}

func autoConvert_v1_IngressList_To_v1beta1_IngressList(in *v1.IngressList, out *IngressList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Ingress, len(*in))
		for i := range *in {
			if err := Convert_v1_Ingress_To_v1beta1_Ingress(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1_IngressList_To_v1beta1_IngressList is an autogenerated conversion function.
func Convert_v1_IngressList_To_v1beta1_IngressList(in *v1.IngressList, out *IngressList, s conversion.Scope) error {
	return autoConvert_v1_IngressList_To_v1beta1_IngressList(in, out, s)
}

func autoConvert_v1beta1_IngressRef_To_v1_IngressRef(in *IngressRef, out *v1.IngressRef, s conversion.Scope) error {
	out.APISchema = in.APISchema
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1beta1_IngressRef_To_v1_IngressRef is an autogenerated conversion function.
func Convert_v1beta1_IngressRef_To_v1_IngressRef(in *IngressRef, out *v1.IngressRef, s conversion.Scope) error {
	return autoConvert_v1beta1_IngressRef_To_v1_IngressRef(in, out, s)
}

func autoConvert_v1_IngressRef_To_v1beta1_IngressRef(in *v1.IngressRef, out *IngressRef, s conversion.Scope) error {
	out.APISchema = in.APISchema
	out.Name = in.Name
	out.Namespace = in.Namespace
	return nil
}

// Convert_v1_IngressRef_To_v1beta1_IngressRef is an autogenerated conversion function.
func Convert_v1_IngressRef_To_v1beta1_IngressRef(in *v1.IngressRef, out *IngressRef, s conversion.Scope) error {
	return autoConvert_v1_IngressRef_To_v1beta1_IngressRef(in, out, s)
}

func autoConvert_v1beta1_IngressRule_To_v1_IngressRule(in *IngressRule, out *v1.IngressRule, s conversion.Scope) error {
	out.Host = in.Host
	if err := Convert_v1beta1_IngressRuleValue_To_v1_IngressRuleValue(&in.IngressRuleValue, &out.IngressRuleValue, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_IngressRule_To_v1_IngressRule is an autogenerated conversion function.
func Convert_v1beta1_IngressRule_To_v1_IngressRule(in *IngressRule, out *v1.IngressRule, s conversion.Scope) error {
	return autoConvert_v1beta1_IngressRule_To_v1_IngressRule(in, out, s)
}

func autoConvert_v1_IngressRule_To_v1beta1_IngressRule(in *v1.IngressRule, out *IngressRule, s conversion.Scope) error {
	out.Host = in.Host
	if err := Convert_v1_IngressRuleValue_To_v1beta1_IngressRuleValue(&in.IngressRuleValue, &out.IngressRuleValue, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_IngressRule_To_v1beta1_IngressRule is an autogenerated conversion function.
func Convert_v1_IngressRule_To_v1beta1_IngressRule(in *v1.IngressRule, out *IngressRule, s conversion.Scope) error {
	return autoConvert_v1_IngressRule_To_v1beta1_IngressRule(in, out, s)
}

func autoConvert_v1beta1_IngressRuleValue_To_v1_IngressRuleValue(in *IngressRuleValue, out *v1.IngressRuleValue, s conversion.Scope) error {
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = new(v1.HTTPIngressRuleValue)
		if err := Convert_v1beta1_HTTPIngressRuleValue_To_v1_HTTPIngressRuleValue(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.HTTP = nil
	}
	if in.TCP != nil {
		in, out := &in.TCP, &out.TCP
		*out = new(v1.TCPIngressRuleValue)
		if err := Convert_v1beta1_TCPIngressRuleValue_To_v1_TCPIngressRuleValue(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.TCP = nil
	}
	return nil
}

// Convert_v1beta1_IngressRuleValue_To_v1_IngressRuleValue is an autogenerated conversion function.
func Convert_v1beta1_IngressRuleValue_To_v1_IngressRuleValue(in *IngressRuleValue, out *v1.IngressRuleValue, s conversion.Scope) error {
	return autoConvert_v1beta1_IngressRuleValue_To_v1_IngressRuleValue(in, out, s)
}

func autoConvert_v1_IngressRuleValue_To_v1beta1_IngressRuleValue(in *v1.IngressRuleValue, out *IngressRuleValue, s conversion.Scope) error {
	if in.HTTP != nil {
		in, out := &in.HTTP, &out.HTTP
		*out = new(HTTPIngressRuleValue)
		if err := Convert_v1_HTTPIngressRuleValue_To_v1beta1_HTTPIngressRuleValue(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.HTTP = nil
	}
	if in.TCP != nil {
		in, out := &in.TCP, &out.TCP
		*out = new(TCPIngressRuleValue)
		if err := Convert_v1_TCPIngressRuleValue_To_v1beta1_TCPIngressRuleValue(*in, *out, s); err != nil {
			return err
		}
	} else {
		out.TCP = nil
	}
	return nil
}

// Convert_v1_IngressRuleValue_To_v1beta1_IngressRuleValue is an autogenerated conversion function.
func Convert_v1_IngressRuleValue_To_v1beta1_IngressRuleValue(in *v1.IngressRuleValue, out *IngressRuleValue, s conversion.Scope) error {
	return autoConvert_v1_IngressRuleValue_To_v1beta1_IngressRuleValue(in, out, s)
}

func autoConvert_v1beta1_IngressSpec_To_v1_IngressSpec(in *IngressSpec, out *v1.IngressSpec, s conversion.Scope) error {
	// WARNING: in.Backend requires manual conversion: does not exist in peer-type
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = make([]v1.IngressTLS, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_IngressTLS_To_v1_IngressTLS(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.TLS = nil
	}
	out.ConfigVolumes = *(*[]v1.VolumeSource)(unsafe.Pointer(&in.ConfigVolumes))
	if in.FrontendRules != nil {
		in, out := &in.FrontendRules, &out.FrontendRules
		*out = make([]v1.FrontendRule, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_FrontendRule_To_v1_FrontendRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.FrontendRules = nil
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]v1.IngressRule, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_IngressRule_To_v1_IngressRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	out.LoadBalancerSourceRanges = *(*[]string)(unsafe.Pointer(&in.LoadBalancerSourceRanges))
	out.Resources = in.Resources
	out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))
	out.Affinity = (*corev1.Affinity)(unsafe.Pointer(in.Affinity))
	out.SchedulerName = in.SchedulerName
	out.Tolerations = *(*[]corev1.Toleration)(unsafe.Pointer(&in.Tolerations))
	out.ImagePullSecrets = *(*[]corev1.LocalObjectReference)(unsafe.Pointer(&in.ImagePullSecrets))
	out.PriorityClassName = in.PriorityClassName
	out.Priority = (*int32)(unsafe.Pointer(in.Priority))
	out.SecurityContext = (*corev1.PodSecurityContext)(unsafe.Pointer(in.SecurityContext))
	out.ExternalIPs = *(*[]string)(unsafe.Pointer(&in.ExternalIPs))
	out.LivenessProbe = (*corev1.Probe)(unsafe.Pointer(in.LivenessProbe))
	out.ReadinessProbe = (*corev1.Probe)(unsafe.Pointer(in.ReadinessProbe))
	out.TerminationGracePeriodSeconds = (*int64)(unsafe.Pointer(in.TerminationGracePeriodSeconds))
	if err := Convert_v1beta1_CoordinatorSpec_To_v1_CoordinatorSpec(&in.Coordinator, &out.Coordinator, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_IngressSpec_To_v1beta1_IngressSpec(in *v1.IngressSpec, out *IngressSpec, s conversion.Scope) error {
	// WARNING: in.DefaultBackend requires manual conversion: does not exist in peer-type
	if in.TLS != nil {
		in, out := &in.TLS, &out.TLS
		*out = make([]IngressTLS, len(*in))
		for i := range *in {
			if err := Convert_v1_IngressTLS_To_v1beta1_IngressTLS(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.TLS = nil
	}
	out.ConfigVolumes = *(*[]VolumeSource)(unsafe.Pointer(&in.ConfigVolumes))
	if in.FrontendRules != nil {
		in, out := &in.FrontendRules, &out.FrontendRules
		*out = make([]FrontendRule, len(*in))
		for i := range *in {
			if err := Convert_v1_FrontendRule_To_v1beta1_FrontendRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.FrontendRules = nil
	}
	if in.Rules != nil {
		in, out := &in.Rules, &out.Rules
		*out = make([]IngressRule, len(*in))
		for i := range *in {
			if err := Convert_v1_IngressRule_To_v1beta1_IngressRule(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Rules = nil
	}
	out.LoadBalancerSourceRanges = *(*[]string)(unsafe.Pointer(&in.LoadBalancerSourceRanges))
	out.Resources = in.Resources
	out.NodeSelector = *(*map[string]string)(unsafe.Pointer(&in.NodeSelector))
	out.Affinity = (*corev1.Affinity)(unsafe.Pointer(in.Affinity))
	out.SchedulerName = in.SchedulerName
	out.Tolerations = *(*[]corev1.Toleration)(unsafe.Pointer(&in.Tolerations))
	out.ImagePullSecrets = *(*[]corev1.LocalObjectReference)(unsafe.Pointer(&in.ImagePullSecrets))
	out.PriorityClassName = in.PriorityClassName
	out.Priority = (*int32)(unsafe.Pointer(in.Priority))
	out.SecurityContext = (*corev1.PodSecurityContext)(unsafe.Pointer(in.SecurityContext))
	out.ExternalIPs = *(*[]string)(unsafe.Pointer(&in.ExternalIPs))
	out.LivenessProbe = (*corev1.Probe)(unsafe.Pointer(in.LivenessProbe))
	out.ReadinessProbe = (*corev1.Probe)(unsafe.Pointer(in.ReadinessProbe))
	out.TerminationGracePeriodSeconds = (*int64)(unsafe.Pointer(in.TerminationGracePeriodSeconds))
	if err := Convert_v1_CoordinatorSpec_To_v1beta1_CoordinatorSpec(&in.Coordinator, &out.Coordinator, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_IngressStatus_To_v1_IngressStatus(in *IngressStatus, out *v1.IngressStatus, s conversion.Scope) error {
	out.ObservedGeneration = in.ObservedGeneration
	out.LoadBalancer = in.LoadBalancer
	return nil
}

// Convert_v1beta1_IngressStatus_To_v1_IngressStatus is an autogenerated conversion function.
func Convert_v1beta1_IngressStatus_To_v1_IngressStatus(in *IngressStatus, out *v1.IngressStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_IngressStatus_To_v1_IngressStatus(in, out, s)
}

func autoConvert_v1_IngressStatus_To_v1beta1_IngressStatus(in *v1.IngressStatus, out *IngressStatus, s conversion.Scope) error {
	out.ObservedGeneration = in.ObservedGeneration
	out.LoadBalancer = in.LoadBalancer
	return nil
}

// Convert_v1_IngressStatus_To_v1beta1_IngressStatus is an autogenerated conversion function.
func Convert_v1_IngressStatus_To_v1beta1_IngressStatus(in *v1.IngressStatus, out *IngressStatus, s conversion.Scope) error {
	return autoConvert_v1_IngressStatus_To_v1beta1_IngressStatus(in, out, s)
}

func autoConvert_v1beta1_IngressTLS_To_v1_IngressTLS(in *IngressTLS, out *v1.IngressTLS, s conversion.Scope) error {
	out.Hosts = *(*[]string)(unsafe.Pointer(&in.Hosts))
	out.SecretName = in.SecretName
	// WARNING: in.Ref requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1_IngressTLS_To_v1beta1_IngressTLS(in *v1.IngressTLS, out *IngressTLS, s conversion.Scope) error {
	out.Hosts = *(*[]string)(unsafe.Pointer(&in.Hosts))
	out.SecretName = in.SecretName
	return nil
}

// Convert_v1_IngressTLS_To_v1beta1_IngressTLS is an autogenerated conversion function.
func Convert_v1_IngressTLS_To_v1beta1_IngressTLS(in *v1.IngressTLS, out *IngressTLS, s conversion.Scope) error {
	return autoConvert_v1_IngressTLS_To_v1beta1_IngressTLS(in, out, s)
}

func autoConvert_v1beta1_OAuth_To_v1_OAuth(in *OAuth, out *v1.OAuth, s conversion.Scope) error {
	out.Host = in.Host
	out.AuthBackend = in.AuthBackend
	out.AuthPath = in.AuthPath
	out.SigninPath = in.SigninPath
	out.Paths = *(*[]string)(unsafe.Pointer(&in.Paths))
	return nil
}

// Convert_v1beta1_OAuth_To_v1_OAuth is an autogenerated conversion function.
func Convert_v1beta1_OAuth_To_v1_OAuth(in *OAuth, out *v1.OAuth, s conversion.Scope) error {
	return autoConvert_v1beta1_OAuth_To_v1_OAuth(in, out, s)
}

func autoConvert_v1_OAuth_To_v1beta1_OAuth(in *v1.OAuth, out *OAuth, s conversion.Scope) error {
	out.Host = in.Host
	out.AuthBackend = in.AuthBackend
	out.AuthPath = in.AuthPath
	out.SigninPath = in.SigninPath
	out.Paths = *(*[]string)(unsafe.Pointer(&in.Paths))
	return nil
}

// Convert_v1_OAuth_To_v1beta1_OAuth is an autogenerated conversion function.
func Convert_v1_OAuth_To_v1beta1_OAuth(in *v1.OAuth, out *OAuth, s conversion.Scope) error {
	return autoConvert_v1_OAuth_To_v1beta1_OAuth(in, out, s)
}

func autoConvert_v1beta1_TCPIngressRuleValue_To_v1_TCPIngressRuleValue(in *TCPIngressRuleValue, out *v1.TCPIngressRuleValue, s conversion.Scope) error {
	out.Address = in.Address
	if err := Convert_intstr_IntOrString_To_int32(&in.Port, &out.Port, s); err != nil {
		return err
	}
	out.NoTLS = in.NoTLS
	if err := Convert_intstr_IntOrString_To_int32(&in.NodePort, &out.NodePort, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_IngressBackend_To_v1_IngressBackend(&in.Backend, &out.Backend, s); err != nil {
		return err
	}
	out.ALPN = *(*[]string)(unsafe.Pointer(&in.ALPN))
	out.Proto = in.Proto
	return nil
}

// Convert_v1beta1_TCPIngressRuleValue_To_v1_TCPIngressRuleValue is an autogenerated conversion function.
func Convert_v1beta1_TCPIngressRuleValue_To_v1_TCPIngressRuleValue(in *TCPIngressRuleValue, out *v1.TCPIngressRuleValue, s conversion.Scope) error {
	return autoConvert_v1beta1_TCPIngressRuleValue_To_v1_TCPIngressRuleValue(in, out, s)
}

func autoConvert_v1_TCPIngressRuleValue_To_v1beta1_TCPIngressRuleValue(in *v1.TCPIngressRuleValue, out *TCPIngressRuleValue, s conversion.Scope) error {
	out.Address = in.Address
	if err := Convert_int32_To_intstr_IntOrString(&in.Port, &out.Port, s); err != nil {
		return err
	}
	out.NoTLS = in.NoTLS
	if err := Convert_int32_To_intstr_IntOrString(&in.NodePort, &out.NodePort, s); err != nil {
		return err
	}
	if err := Convert_v1_IngressBackend_To_v1beta1_IngressBackend(&in.Backend, &out.Backend, s); err != nil {
		return err
	}
	out.ALPN = *(*[]string)(unsafe.Pointer(&in.ALPN))
	out.Proto = in.Proto
	return nil
}

// Convert_v1_TCPIngressRuleValue_To_v1beta1_TCPIngressRuleValue is an autogenerated conversion function.
func Convert_v1_TCPIngressRuleValue_To_v1beta1_TCPIngressRuleValue(in *v1.TCPIngressRuleValue, out *TCPIngressRuleValue, s conversion.Scope) error {
	return autoConvert_v1_TCPIngressRuleValue_To_v1beta1_TCPIngressRuleValue(in, out, s)
}

func autoConvert_v1beta1_TLSAuth_To_v1_TLSAuth(in *TLSAuth, out *v1.TLSAuth, s conversion.Scope) error {
	out.SecretName = in.SecretName
	out.VerifyClient = v1.TLSAuthVerifyOption(in.VerifyClient)
	out.Headers = *(*map[string]string)(unsafe.Pointer(&in.Headers))
	out.ErrorPage = in.ErrorPage
	return nil
}

// Convert_v1beta1_TLSAuth_To_v1_TLSAuth is an autogenerated conversion function.
func Convert_v1beta1_TLSAuth_To_v1_TLSAuth(in *TLSAuth, out *v1.TLSAuth, s conversion.Scope) error {
	return autoConvert_v1beta1_TLSAuth_To_v1_TLSAuth(in, out, s)
}

func autoConvert_v1_TLSAuth_To_v1beta1_TLSAuth(in *v1.TLSAuth, out *TLSAuth, s conversion.Scope) error {
	out.SecretName = in.SecretName
	out.VerifyClient = TLSAuthVerifyOption(in.VerifyClient)
	out.Headers = *(*map[string]string)(unsafe.Pointer(&in.Headers))
	out.ErrorPage = in.ErrorPage
	return nil
}

// Convert_v1_TLSAuth_To_v1beta1_TLSAuth is an autogenerated conversion function.
func Convert_v1_TLSAuth_To_v1beta1_TLSAuth(in *v1.TLSAuth, out *TLSAuth, s conversion.Scope) error {
	return autoConvert_v1_TLSAuth_To_v1beta1_TLSAuth(in, out, s)
}

func autoConvert_v1beta1_VolumeSource_To_v1_VolumeSource(in *VolumeSource, out *v1.VolumeSource, s conversion.Scope) error {
	out.Name = in.Name
	out.Secret = (*corev1.SecretVolumeSource)(unsafe.Pointer(in.Secret))
	out.ConfigMap = (*corev1.ConfigMapVolumeSource)(unsafe.Pointer(in.ConfigMap))
	out.Projected = (*corev1.ProjectedVolumeSource)(unsafe.Pointer(in.Projected))
	out.MountPath = in.MountPath
	return nil
}

// Convert_v1beta1_VolumeSource_To_v1_VolumeSource is an autogenerated conversion function.
func Convert_v1beta1_VolumeSource_To_v1_VolumeSource(in *VolumeSource, out *v1.VolumeSource, s conversion.Scope) error {
	return autoConvert_v1beta1_VolumeSource_To_v1_VolumeSource(in, out, s)
}

func autoConvert_v1_VolumeSource_To_v1beta1_VolumeSource(in *v1.VolumeSource, out *VolumeSource, s conversion.Scope) error {
	out.Name = in.Name
	out.Secret = (*corev1.SecretVolumeSource)(unsafe.Pointer(in.Secret))
	out.ConfigMap = (*corev1.ConfigMapVolumeSource)(unsafe.Pointer(in.ConfigMap))
	out.Projected = (*corev1.ProjectedVolumeSource)(unsafe.Pointer(in.Projected))
	out.MountPath = in.MountPath
	return nil
}

// Convert_v1_VolumeSource_To_v1beta1_VolumeSource is an autogenerated conversion function.
func Convert_v1_VolumeSource_To_v1beta1_VolumeSource(in *v1.VolumeSource, out *VolumeSource, s conversion.Scope) error {
	return autoConvert_v1_VolumeSource_To_v1beta1_VolumeSource(in, out, s)
}
